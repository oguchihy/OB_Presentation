library(dplyr)
library(tidyr)
library(ggplot2)
library(stringr)

# Assuming para_zip_plt is your data frame

# Remove the first two rows and exclude the columns `p` and `test`
para_zip_plt.hb <- para_zip_plt %>%
  slice(-1:-2) %>%
  select(-p, -test)

# Clean and separate the percentages
cleaned_data <- para_zip_plt.hb %>%
  rownames_to_column(var = "zip") %>%
  mutate(across(`0`:`9`, ~ str_extract(., "(?<=\\().+?(?=\\))"))) %>%
  mutate(across(`11`, ~ str_extract(., "(?<=\\().+?(?=\\))"))) %>%
  rename(para_0 = `0`, para_1 = `1`, para_2 = `2`, para_3 = `3`, para_4 = `4`, 
         para_5 = `5`, para_6 = `6`, para_7 = `7`, para_8 = `8`, para_9 = `9`, 
         para_11 = `11`)

# Reshape the data into long format
long_data <- cleaned_data %>%
  pivot_longer(cols = starts_with("para_"), names_to = "parity", values_to = "percent") %>%
  mutate(percent = as.numeric(percent)) %>%
  filter(!is.na(percent)) %>%
  mutate(parity = factor(parity, levels = paste0("para_", c(0:9, 11))))

# Create the heatmap plot
ggplot(long_data, aes(x = parity, y = zip, fill = percent)) +
  geom_tile() +
  labs(title = "Heatmap of Parity Levels by ZIP Code",
       x = "Parity Level",
       y = "ZIP Code",
       fill = "Percentage") +
  theme_minimal() +
  scale_fill_gradient(low = "white", high = "blue", na.value = "grey50") +
  scale_y_discrete(limits = rev(levels(as.factor(long_data$zip))))
